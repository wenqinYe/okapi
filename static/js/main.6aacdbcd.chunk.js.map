{"version":3,"sources":["pages/HomePage.js","pages/LoginPage.js","pages/ProfilePage.js","db/db.js","components/Answer.js","components/Answers.js","components/AnswerField.js","components/Topic.js","pages/TopicsPage.js","pages/TopicPage.js","components/Navbar.js","layouts/Head.js","layouts/Layout.js","App.js","redux/actions/actions.js","registerServiceWorker.js","redux/store.js","redux/reducers/user.js","redux/reducers/db.js","index.js","Okapi_logo.svg"],"names":["HomePage","react_default","a","createElement","className","this","props","currentUser","email","Component","connect","state","dispatch","uiConfig","signInSuccessUrl","signInOptions","firebase","auth","GoogleAuthProvider","PROVIDER_ID","LoginPage","Container","Col","Row","sm","StyledFirebaseAuth_default","firebaseAuth","ProfilePage","displayName","require","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","firestore","extractDataMultiple","querySnapshot","data","forEach","doc","push","id","Answer","console","log","body","user","display_name","Answers","answers","map","answer","components_Answer","AnswerField","react_final_form_es","onSubmit","validate","render","_ref","handleSubmit","pristine","invalid","initialValue","name","component","placeholder","type","disabled","submitting","Topic","title","description","showAnswerField","components_AnswerField","userAnswer","showUserAnswerEdit","onClick","changeToAnswerField","components_Answers","TopicsPage","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","Promise","resolve","reject","collection","get","then","catch","error","topics","setState","md","topic","react_router_dom","to","components_Topic","TopicPage","match","params","where","orderBy","getTopicAnswers","userAlreadyHasAnswer","values","topicId","uid","set","topic_id","created_at","Timestamp","fromDate","Date","photo_URL","photoURL","merge","docRef","done","window","location","reload","_this2","_this3","onValidate","Navbar","status","src","logo","alt","href","logout","LoggedIn","Head","Layout","children","React","App","onAuthStateChanged","userInfo","setCurrentUser","signOut","layouts_Layout","components_Navbar","src_pages_LoginPage","react_router","exact","path","undefined","signedIn","loadingScreen","mainScreen","notSignedInScreen","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","rootReducer","combineReducers","arguments","length","action","newState","objectSpread","store","createStore","ReactDOM","es","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","headers","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.6aacdbcd.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nimport { connect } from 'react-redux'\n\nconst mapStateToProps = state => ({\n  currentUser: state.currentUser\n})\nconst mapDispatchToProps = dispatch => ({})\n\nclass HomePage extends Component {\n  render() {\n    return (\n      <div className=\"Home-Page\">\n        <h1>Homepage</h1>\n        {this.props.currentUser && this.props.currentUser.email}\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(HomePage)\n","import React, { Component } from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport firebase from 'firebase';\n\nimport '../styles/pages/LoginPage.css';\n\nconst uiConfig = {\n  signInSuccessUrl: '/',\n  signInOptions: [\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID\n  ]\n}\n\nconst mapStateToProps = state => ({\n  currentUser: state.currentUser\n})\nconst mapDispatchToProps = dispatch => ({\n\n})\n\nclass LoginPage extends Component {\n  componentDidMount() {\n  }\n\n  render() {\n    return (\n      <div className=\"LoginPage\">\n        <Container>\n          <Col>\n            <Row sm={12}>\n              <h1>Okapi is a palce to share wisdom</h1>\n            </Row>\n            <Row sm={12}>\n              <p>Get advice, knowledge and more</p>\n            </Row>\n            <Row sm={12}>\n              {this.props.currentUser ?\n                this.props.currentUser.email :\n                <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()}/>\n              }\n            </Row>\n          </Col>\n        </Container>\n\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginPage)\n","import React, { Component } from 'react'\n\nimport { connect } from 'react-redux'\n\nconst mapStateToProps = state => ({\n  currentUser: state.currentUser\n})\nconst mapDispatchToProps = dispatch => ({})\n\nclass ProfilePage extends Component {\n  render() {\n    return (\n      <div className=\"Home-Page\">\n        <h1>ProfilePage</h1>\n        {this.props.currentUser && this.props.currentUser.displayName}\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ProfilePage)\n","import firebase from 'firebase';\n\nrequire('firebase/firestore');\nvar config = {\n  apiKey: \"AIzaSyBAKBeOiCRMgcXO6zV8aIwUAW6Jes9proY\",\n  authDomain: \"okapi-897e4.firebaseapp.com\",\n  databaseURL: \"https://okapi-897e4.firebaseio.com\",\n  projectId: \"okapi-897e4\",\n  storageBucket: \"okapi-897e4.appspot.com\",\n  messagingSenderId: \"893790289141\"\n};\nfirebase.initializeApp(config);\nvar db = firebase.firestore();\n\n/**\n * Extracts array of data from firebase querySnapshot\n * into a dictionary\n */\nfunction extractData(doc) {\n    return {\n        id: doc.id,\n        data: doc.data()\n    }\n}\n\n/**\n * Extract data from firebase querySnapshot\n * into a dictionary\n */\nfunction extractDataMultiple(querySnapshot) {\n    var data = [];\n    querySnapshot.forEach(doc => {\n        data.push({\n            id: doc.id,\n            data: doc.data()\n        });\n    });\n    return data;\n}\n\n/**\n * Save user to the database\n */\nexport function saveUser(userInfo) {\n    return new Promise(function(resolve, reject) {\n        db.collection('users').doc(userInfo.uid).set({\n            photo_URL: userInfo.photoURL,\n            email: userInfo.email,\n            display_name: userInfo.displayName\n        }, {merge: true})\n        .then(function(docRef) {\n            resolve(docRef);\n        })\n        .catch(function(error) {\n            reject(error);\n        });\n    });\n}\n\n/**\n * Get the ids and data for all the topics\n */\nexport function getTopics() {\n    return new Promise(function(resolve, reject) {\n        db.collection(\"topics\").get()\n        .then(function(querySnapshot) {\n            resolve(extractDataMultiple(querySnapshot));\n        })\n        .catch(function(error) {\n            reject(error);\n        });\n    });\n}\n\n/**\n * Get the data for a topic\n */\nexport function getTopic(id) {\n    return new Promise(function(resolve, reject) {\n        db.collection(\"topics\").doc(id).get()\n        .then(function(querySnapshot) {\n            resolve(extractData(querySnapshot));\n        })\n        .catch(function(error) {\n            reject(error);\n        });\n    });\n}\n\n/**\n * Get the answers for a specific topic\n * @param {str} id \n */\nexport function getTopicAnswers(id) {\n    return new Promise(function(resolve, reject) {\n        db.collection(\"answers\")\n        .where(\"topic_id\", \"==\", id)\n        .orderBy(\"created_at\", \"desc\")\n        .get()\n        .then(function(querySnapshot) {\n            resolve(extractDataMultiple(querySnapshot));\n        })\n        .catch(function(error) {\n            reject(error);\n        });\n    });\n}\n\n/**\n * Save answers for a topic\n */\nexport function saveTopicAnswer(answer, user) {\n    return new Promise(function(resolve, reject) {\n        db.collection(\"answers\").doc(user.uid + answer.topicId).set({\n            body: answer.body,\n            topic_id: answer.topicId,\n            created_at: firebase.firestore.Timestamp.fromDate(new Date()),\n            // store the user data in answer so we don't have to re\n            // request user every time\n            user: {\n                photo_URL: user.photoURL,\n                display_name: user.displayName,\n                uid: user.uid\n            }\n        }, { merge: true})\n        .then(function(docRef) {\n            resolve(docRef);\n        })\n        .catch(function(error) {\n            reject(error);\n        });\n    });\n}\n","import React from 'react';\nimport '../styles/components/Answer.css';\n\nfunction Answer(props) {\n    console.log(props);\n    return (\n        <div className=\"Answer\">\n            <p className=\"Body\">{props.body}</p>\n            <p className=\"DisplayName\">{props.user.display_name}</p>\n        </div>\n    )\n}\n\nexport default Answer;","import React from 'react';\nimport Answer from './Answer';\n\nfunction renderAnswers(answers) {\n    console.log(\"rendering answers: \", answers);\n    return answers.map((answer) => {\n        return <Answer body={answer.data.body} user={answer.data.user}/>\n    })\n}\n\nfunction Answers(props) {\n    return (\n        <div className=\"Answers\">\n            {renderAnswers(props.answers)}\n        </div>\n    )\n}\n\nexport default Answers;","import React from 'react';\nimport { Form, Field } from 'react-final-form';\n\nfunction AnswerField(props) {\n    return (\n      <Form\n      onSubmit={props.onSubmit}\n      validate={props.validate}\n      render={({handleSubmit, pristine, invalid}) => (\n        <form onSubmit={handleSubmit}>\n          <div className=\"AnswerInput\">\n            {props.answer ?\n                <Field initialValue={props.answer.data.body} name=\"body\" component=\"textarea\" placeholder=\"Your answer...\"></Field>\n            :\n                <Field name=\"body\" component=\"textarea\" placeholder=\"Your answer...\"></Field>\n            }\n          </div>\n          <button className=\"button\" type=\"submit\" disabled={pristine || invalid || props.submitting}>Submit Answer</button>\n        </form>\n      )}/>\n    )\n  }\n  \n  export default AnswerField;","import React from 'react';\nimport Answer from './Answer';\nimport Answers from './Answers';\nimport AnswerField from './AnswerField';\nimport '../styles/components/Topic.css';\n\nfunction Topic(props) {\n    return (\n        <div className=\"Topic\">\n            <div className=\"TopicWrapper\">\n              <h2 className=\"Title\">{props.title}</h2>\n              <p className=\"Description\">{props.description}</p>\n\n              {props.showAnswerField && \n                <AnswerField \n                answer={props.userAnswer}\n                onSubmit={props.onSubmit} \n                validate={props.validate} \n                submitting={props.submitting}/>\n              }\n\n              {props.showUserAnswerEdit &&\n                <div className=\"UserAnswerEdit\">\n                  <p>{props.userAnswer.data.body}</p>\n                  <button className=\"button-secondary\" type=\"submit\" onClick={props.changeToAnswerField}>Edit Your Answer</button>\n                </div>\n              }\n              {(props.showAnswerField || props.showUserAnswerEdit) && <hr/>}\n              {props.answers && <Answers answers={props.answers}/>}\n            </div>\n        </div>\n    )\n}\n\nexport default Topic;","import React, { Component } from 'react'\n\nimport { connect } from 'react-redux'\nimport { getTopics } from '../db/db';\nimport Topic from '../components/Topic';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport {\n  Link\n} from 'react-router-dom';\nimport '../styles/pages/TopicsPage.css';\n\nconst mapStateToProps = state => ({})\nconst mapDispatchToProps = dispatch => ({})\n\nclass TopicsPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    getTopics().then(topics => {\n      this.setState({\n        topics: topics\n      });\n    });\n  }\n\n\n  render() {\n    return (\n      <div className=\"TopicsPage\">\n        <Container>\n            <Row>\n              <Col md={10} sm={12}>\n                <h1 className=\"PageTitle\">Discussion Topics</h1>\n                {this.state.topics && this.state.topics.map(topic => {\n                  return (  \n                    <Link to={\"/topic/\" + topic.id}>\n                      <Topic \n                        title={topic.data.title} \n                        description={topic.data.description} \n                      />\n                    </Link>    \n                  )\n                })}\n              </Col>\n            </Row>\n        </Container>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TopicsPage)\n","import React, { Component } from 'react'\nimport Topic from '../components/Topic';\nimport { Form, Field } from 'react-final-form';\nimport { connect } from 'react-redux'\nimport { getTopicAnswers, saveTopicAnswer, getTopic } from '../db/db';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport '../styles/pages/TopicPage.css';\n\nconst mapStateToProps = state => ({\n  currentUser: state.user.currentUser\n})\nconst mapDispatchToProps = dispatch => ({})\n\nclass TopicPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      submitting: false\n    };\n    this.id = this.props.match.params.id;\n    getTopic(this.id).then(topic => {\n      this.setState({\n        topic: topic\n      });\n    });\n    getTopicAnswers(this.id).then(answers => {\n      var userAnswer = this.userAlreadyHasAnswer(answers);\n      \n      this.setState({\n        showUserAnswerEdit: userAnswer,\n        showAnswerField: !userAnswer,\n        userAnswer: userAnswer\n      });\n\n      this.setState({\n        answers: answers\n      });\n    })\n  }\n\n  onSubmit(values) {\n    values.topicId = this.id;\n    this.setState({\n      submitting: true\n    });\n    saveTopicAnswer(values, this.props.currentUser)\n      .then(done => {\n        window.location.reload();\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  validate() {\n    return true;\n  }\n\n  userAlreadyHasAnswer(answers) {\n    var userAnswer;\n    answers.map(answer => {\n      if(answer.data.user.uid == this.props.currentUser.uid) {\n        userAnswer = answer;\n      }\n    });\n    return userAnswer;\n  }\n\n  changeToAnswerField() {\n    console.log('changing');\n    this.setState({\n      showUserAnswerEdit: false,\n      showAnswerField: true\n    })\n  }\n\n  render() {\n    if(!this.state.topic) {\n      return <div className=\"TopicPage\"></div>\n    } else {\n      return (\n        <div className=\"TopicPage\">\n          <Container>\n            <Row>\n              <Col md={10} sm={12}>\n                <Topic \n                  title={this.state.topic.data.title} \n                  description={this.state.topic.data.description} \n                  answers={this.state.answers}\n\n                  showAnswerField={this.state.showAnswerField}\n                  onSubmit={(values) => this.onSubmit(values)}\n                  onValidate={this.validate}\n                  submitting={this.state.submitting}\n\n                  showUserAnswerEdit={this.state.showUserAnswerEdit}\n                  userAnswer={this.state.userAnswer}\n                  changeToAnswerField={() => this.changeToAnswerField()}\n                />\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      )\n    }\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TopicPage)\n","import React from 'react';\nimport logo from '../Okapi_logo.svg'; \nimport {\n    Link\n} from 'react-router-dom';\nimport '../styles/components/Navbar.css';\n\nfunction Blank(props) {\n    return ( \n        <nav>\n            <Link to=\"/\"><img src={logo} alt=\"Okapi Logo\"></img><span className=\"Tagline\"> A place to share wisdom </span></Link>\n        </nav>\n    )\n}\n\nfunction LoggedIn(props) {\n    return ( \n        <nav>\n            <Link to=\"/\"><img src={logo} alt=\"Okapi Logo\"></img><span className=\"Tagline\"> A place to share wisdom </span></Link>\n            <div className=\"NavControls\">\n                <button className=\"ButtonTertiary\" href=\"\" onClick={() => props.logout()}> Logout</button>\n            </div>\n        </nav>\n    )\n}\n\nfunction LoggedOut(props) {\n    return (\n        <nav>\n        <Link to=\"/\"><img src={logo} alt=\"Okapi Logo\"></img><span className=\"Tagline\"> A place to share wisdom </span></Link>\n        <div className=\"NavControls\">\n            <Link className=\"ButtonTertiary\" to=\"/login\">Login</Link> <br/>\n        </div>\n        </nav>\n    )\n}\n\nfunction Navbar(props) {\n    if(props.status === \"blank\") {\n        return Blank(props);\n    } else if(props.status === \"loggedIn\") {\n        return LoggedIn(props);\n    } else {\n        return LoggedOut(props);\n    }\n}\n\nexport default Navbar;","import React from 'react';\n\nfunction Head() {\n    return (\n        <head>\n            <link\n                rel=\"stylesheet\"\n                href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n                integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\n                crossorigin=\"anonymous\"\n            />\n        </head>\n    )\n}\n\nexport default Head;","import React from 'react';\nimport Head from './Head';\nimport {\n    HashRouter as Router,\n  } from 'react-router-dom';\n\n\nclass Layout extends React.Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <Router>\n                    {this.props.children}\n                </Router>\n            </div>   \n        )\n    }\n}\n\nexport default Layout;","import React, { Component } from 'react';\nimport firebase from 'firebase';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link\n} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setCurrentUser } from './redux/actions/actions.js';\n\nimport HomePage from './pages/HomePage';\nimport LoginPage from './pages/LoginPage';\nimport ProfilePage from './pages/ProfilePage';\nimport TopicsPage from './pages/TopicsPage';\nimport TopicPage from './pages/TopicPage';\nimport Navbar from './components/Navbar';\nimport Layout from './layouts/Layout';\n\nimport './App.css';\nimport { saveUser } from './db/db.js';\n\nconst mapReduxStateToProps = state => ({\n  currentUser: state.user.currentUser,\n  signedIn: state.user.signedIn\n});\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: (user) => dispatch(setCurrentUser(user)),\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if(user) {\n        saveUser(user).then(done => {\n          this.props.setCurrentUser(user);\n        })\n        .catch(error => {\n          console.log(error);\n        });\n      } else {\n        // user not signed in\n        this.props.setCurrentUser(null); //doing this sets sign in to false\n      }\n    });\n  }\n\n  logout() {\n    firebase.auth().signOut();\n  }\n\n  loadingScreen() {\n      return (\n          <Layout>\n            <Navbar status=\"blank\"></Navbar>\n            Loading...\n          </Layout>\n      )\n  }\n\n  notSignedInScreen() {\n    return (\n        <Layout>\n          <Navbar status=\"loggedOut\"></Navbar>\n          <LoginPage />\n        </Layout>\n    )\n  }\n\n  mainScreen() {\n    return (\n      <Layout>\n          <Navbar logout={() => this.logout()} status=\"loggedIn\"></Navbar>\n\n          <Route exact path=\"/\" component={TopicsPage}/>\n          <Route exact path=\"/login\" component={LoginPage}/>\n          <Route exact path=\"/profile\" component={ProfilePage}/>\n          <Route exact path=\"/topics\" component={TopicsPage}/>\n          <Route exact path=\"/topic/:id\" component={TopicPage}/>\n      </Layout>\n    );\n  }\n\n  render() {\n    if(this.props.signedIn === undefined) {\n      return this.loadingScreen();\n    } else if(!this.props.signedIn) {\n      return this.notSignedInScreen();\n    } else {\n      return this.mainScreen();\n    }\n  }\n}\n\n/*\n  This little work around is to allow the redux store to be passed to the\n  'App' component.\n  See: https://github.com/reactjs/react-redux/issues/390#issuecomment-221389608\n*/\nexport default connect(\n  mapReduxStateToProps,\n  mapDispatchToProps\n)(App);\n","export const setCurrentUser = currentUser => ({\n  type: 'SET_CURRENT_USER',\n  currentUser: currentUser\n});\n\nexport const setDB = db => ({\n  type: 'SET_DB',\n  db: db\n});\n\nexport const getCurrentUser =  'GET_CURRENT_USER';\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore, combineReducers } from 'redux';\nimport {userReducer as user} from './reducers/user.js';\nimport {dbReducer as db} from './reducers/db.js';\n\nconst rootReducer = combineReducers({\n    user,\n    db\n})\nconst store = createStore(rootReducer);\n\nexport default store; ","const userReducer = (state = {}, action) => {\n  switch(action.type) {\n    case 'SET_CURRENT_USER':\n      var newState = {...state}\n      newState.currentUser = action.currentUser\n      if(action.currentUser) {\n        newState.signedIn = true;\n      } else {\n        newState.signedIn = false;\n      }\n      return newState\n    default:\n      return state\n  }\n}\n\nexport {userReducer};\n","const dbReducer = (state = {}, action) => {\n    switch(action.type) {\n        case 'SET_DB':\n            var newState = {...state};\n            newState.db = action.db;\n            return newState;\n        default:\n            return state;\n    }\n}\n\nexport {dbReducer};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(<Provider store={store}> <App/> </Provider>, document.getElementById('root'));\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/Okapi_logo.2b3b4cf0.svg\";"],"sourceRoot":""}