{"version":3,"sources":["pages/HomePage.js","pages/LoginPage.js","pages/UserPage.js","db/db.js","components/Answer.js","components/Answers.js","components/AnswerField.js","components/Topic.js","pages/TopicsPage.js","pages/TopicPage.js","components/Navbar.js","layouts/Head.js","layouts/Layout.js","App.js","redux/actions/actions.js","registerServiceWorker.js","redux/store.js","redux/reducers/user.js","redux/reducers/db.js","index.js","Okapi_logo.svg"],"names":["HomePage","react_default","a","createElement","className","this","props","currentUser","email","Component","connect","state","dispatch","uiConfig","signInSuccessUrl","signInOptions","firebase","auth","GoogleAuthProvider","PROVIDER_ID","LoginPage","Container","Col","Row","sm","StyledFirebaseAuth_default","firebaseAuth","UserPage","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","displayName","require","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","firestore","extractDataMultiple","querySnapshot","data","forEach","doc","push","id","Answer","console","log","body","user","display_name","Answers","answers","map","answer","components_Answer","AnswerField","react_final_form_es","onSubmit","validate","render","_ref","handleSubmit","pristine","invalid","initialValue","name","component","placeholder","type","disabled","submitting","submitText","Topic","title","description","showAnswerField","components_AnswerField","userAnswer","showUserAnswerEdit","onClick","changeToAnswerField","components_Answers","TopicsPage","_this","Promise","resolve","reject","collection","get","then","catch","error","topics","setState","lg","md","topic","xs","react_router_dom","to","components_Topic","TopicPage","submitAnswerText","match","params","where","orderBy","getTopicAnswers","userAlreadyHasAnswer","values","topicId","uid","set","topic_id","created_at","Timestamp","fromDate","Date","photo_URL","photoURL","merge","docRef","done","window","location","reload","_this2","_this3","Navbar","status","src","logo","alt","href","logout","LoggedIn","Head","Layout","children","React","App","clientId","onAuthStateChanged","userInfo","display_id","split","join","slice","setCurrentUser","signOut","layouts_Layout","components_Navbar","src_pages_LoginPage","undefined","signedIn","loadingScreen","mainScreen","Boolean","hostname","rootReducer","combineReducers","arguments","length","action","newState","objectSpread","store","createStore","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.a78d7632.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nimport { connect } from 'react-redux'\n\nconst mapStateToProps = state => ({\n  currentUser: state.currentUser\n})\nconst mapDispatchToProps = dispatch => ({})\n\nclass HomePage extends Component {\n  render() {\n    return (\n      <div className=\"Home-Page\">\n        <h1>Homepage</h1>\n        {this.props.currentUser && this.props.currentUser.email}\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(HomePage)\n","import React, { Component } from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport firebase from 'firebase';\n\nimport '../styles/pages/LoginPage.css';\n\nconst uiConfig = {\n  signInSuccessUrl: '/okapi/',\n  signInOptions: [\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID\n  ]\n}\n\nconst mapStateToProps = state => ({\n  currentUser: state.currentUser\n})\nconst mapDispatchToProps = dispatch => ({\n\n})\n\nclass LoginPage extends Component {\n  componentDidMount() {\n  }\n\n  render() {\n    return (\n      <div className=\"LoginPage\">\n        <Container>\n          <Col>\n            <Row sm={12}>\n              <h1>Okapi is a palce to share wisdom</h1>\n            </Row>\n            <Row sm={12}>\n              <p>Get advice, knowledge and more</p>\n            </Row>\n            <Row sm={12}>\n              {this.props.currentUser ?\n                this.props.currentUser.email :\n                <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()}/>\n              }\n            </Row>\n          </Col>\n        </Container>\n\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginPage)\n","import React, { Component } from 'react'\n\nimport { connect } from 'react-redux'\n\nconst mapStateToProps = state => ({\n  currentUser: state.currentUser\n})\nconst mapDispatchToProps = dispatch => ({})\n\nclass UserPage extends Component {\n  constructor(props) {\n    super(props);\n  }\n  \n  render() {\n    return (\n      <div className=\"Home-Page\">\n        <h1>User Page</h1>\n        {this.props.currentUser && this.props.currentUser.displayName}\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UserPage)\n","import firebase from 'firebase';\n\nrequire('firebase/firestore');\nvar config = {\n  apiKey: \"AIzaSyBAKBeOiCRMgcXO6zV8aIwUAW6Jes9proY\",\n  authDomain: \"okapi-897e4.firebaseapp.com\",\n  databaseURL: \"https://okapi-897e4.firebaseio.com\",\n  projectId: \"okapi-897e4\",\n  storageBucket: \"okapi-897e4.appspot.com\",\n  messagingSenderId: \"893790289141\"\n};\nfirebase.initializeApp(config);\nvar db = firebase.firestore();\n\n/**\n * Extracts array of data from firebase querySnapshot\n * into a dictionary\n */\nfunction extractData(doc) {\n    return {\n        id: doc.id,\n        data: doc.data()\n    }\n}\n\n/**\n * Extract data from firebase querySnapshot\n * into a dictionary\n */\nfunction extractDataMultiple(querySnapshot) {\n    var data = [];\n    querySnapshot.forEach(doc => {\n        data.push({\n            id: doc.id,\n            data: doc.data()\n        });\n    });\n    return data;\n}\n\nexport function getUserId(displayName, uid) {\n    return displayName.split(\" \").join(\"-\") + \"-\" + uid.slice(0, 3);\n}\n\n/**\n * Save user to the database\n */\nexport function saveUser(userInfo) {\n    return new Promise(function(resolve, reject) {\n        db.collection('users').doc(userInfo.uid).set({\n            photo_URL: userInfo.photoURL,\n            email: userInfo.email,\n            display_name: userInfo.displayName,\n            display_id: getUserId(userInfo.displayName, userInfo.uid)\n        }, {merge: true})\n        .then(function(docRef) {\n            resolve(docRef);\n        })\n        .catch(function(error) {\n            reject(error);\n        });\n    });\n}\n\n/**\n * Get the ids and data for all the topics\n */\nexport function getTopics() {\n    return new Promise(function(resolve, reject) {\n        db.collection(\"topics\").get()\n        .then(function(querySnapshot) {\n            resolve(extractDataMultiple(querySnapshot));\n        })\n        .catch(function(error) {\n            reject(error);\n        });\n    });\n}\n\n/**\n * Get the data for a topic\n */\nexport function getTopic(id) {\n    return new Promise(function(resolve, reject) {\n        db.collection(\"topics\").doc(id).get()\n        .then(function(querySnapshot) {\n            resolve(extractData(querySnapshot));\n        })\n        .catch(function(error) {\n            reject(error);\n        });\n    });\n}\n\n/**\n * Get the answers for a specific topic\n * @param {str} id \n */\nexport function getTopicAnswers(id) {\n    return new Promise(function(resolve, reject) {\n        db.collection(\"answers\")\n        .where(\"topic_id\", \"==\", id)\n        .orderBy(\"created_at\", \"desc\")\n        .get()\n        .then(function(querySnapshot) {\n            resolve(extractDataMultiple(querySnapshot));\n        })\n        .catch(function(error) {\n            reject(error);\n        });\n    });\n}\n\n/**\n * Save answers for a topic\n */\nexport function saveTopicAnswer(answer, user) {\n    return new Promise(function(resolve, reject) {\n        db.collection(\"answers\").doc(user.uid + answer.topicId).set({\n            body: answer.body,\n            topic_id: answer.topicId,\n            created_at: firebase.firestore.Timestamp.fromDate(new Date()),\n            // store the user data in answer so we don't have to re\n            // request user every time\n            user: {\n                photo_URL: user.photoURL,\n                display_name: user.displayName,\n                uid: user.uid\n            }\n        }, { merge: true})\n        .then(function(docRef) {\n            resolve(docRef);\n        })\n        .catch(function(error) {\n            reject(error);\n        });\n    });\n}\n","import React from 'react';\nimport '../styles/components/Answer.css';\n\nfunction Answer(props) {\n    console.log(props);\n    return (\n        <div className=\"Answer\">\n            <p className=\"Body\">{props.body}</p>\n            <p className=\"DisplayName\">{props.user.display_name}</p>\n        </div>\n    )\n}\n\nexport default Answer;","import React from 'react';\nimport Answer from './Answer';\n\nfunction renderAnswers(answers) {\n    console.log(\"rendering answers: \", answers);\n    return answers.map((answer) => {\n        return <Answer body={answer.data.body} user={answer.data.user}/>\n    })\n}\n\nfunction Answers(props) {\n    return (\n        <div className=\"Answers\">\n            {renderAnswers(props.answers)}\n        </div>\n    )\n}\n\nexport default Answers;","import React from 'react';\nimport { Form, Field } from 'react-final-form';\n\nfunction AnswerField(props) {\n    return (\n      <Form\n      onSubmit={props.onSubmit}\n      validate={props.validate}\n      render={({handleSubmit, pristine, invalid}) => (\n        <form onSubmit={handleSubmit}>\n          <div className=\"AnswerInput\">\n            {props.answer ?\n                <Field initialValue={props.answer.data.body} name=\"body\" component=\"textarea\" placeholder=\"Your answer...\"></Field>\n            :\n                <Field name=\"body\" component=\"textarea\" placeholder=\"Your answer...\"></Field>\n            }\n          </div>\n          <button className=\"button\" type=\"submit\" disabled={pristine || invalid || props.submitting}>\n            {props.submitText ? props.submitText : \"Submit Answer\"}\n          </button>\n        </form>\n      )}/>\n    )\n  }\n  \n  export default AnswerField;","import React from 'react';\nimport Answer from './Answer';\nimport Answers from './Answers';\nimport AnswerField from './AnswerField';\nimport '../styles/components/Topic.css';\n\nfunction Topic(props) {\n    return (\n        <div className=\"Topic\">\n            <div className=\"TopicWrapper\">\n              <h2 className=\"Title\">{props.title}</h2>\n              <p className=\"Description\">{props.description}</p>\n\n              {props.showAnswerField && \n                <AnswerField \n                answer={props.userAnswer}\n                onSubmit={props.onSubmit} \n                validate={props.validate} \n                submitting={props.submitting}/>\n              }\n\n              {props.showUserAnswerEdit &&\n                <div className=\"UserAnswerEdit\">\n                  <p>{props.userAnswer.data.body}</p>\n                  <button className=\"button-secondary\" type=\"submit\" onClick={props.changeToAnswerField}>Edit Your Answer</button>\n                </div>\n              }\n              {(props.showAnswerField || props.showUserAnswerEdit) && <hr/>}\n              {props.answers && <Answers answers={props.answers}/>}\n            </div>\n        </div>\n    )\n}\n\nexport default Topic;","import React, { Component } from 'react'\n\nimport { connect } from 'react-redux'\nimport { getTopics } from '../db/db';\nimport Topic from '../components/Topic';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport {\n  Link\n} from 'react-router-dom';\nimport '../styles/pages/TopicsPage.css';\n\nconst mapStateToProps = state => ({})\nconst mapDispatchToProps = dispatch => ({})\n\nclass TopicsPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    getTopics().then(topics => {\n      this.setState({\n        topics: topics\n      });\n    });\n  }\n\n\n  render() {\n    return (\n      <div className=\"TopicsPage\">\n        <Container>\n            <Row>\n              <Col lg={12} md={12} sm={12}>\n                <p className=\"PageSubtitle\"> Okapi student life board </p>\n                <h1 className=\"PageTitle\">What do you want to know?</h1>\n                <Row>\n                  {this.state.topics && this.state.topics.map(topic => {\n                    return (  \n                      <Col className=\"TopicColumn\" md={4} sm={6} xs={6}>\n                        <Link to={\"/topic/\" + topic.id}>\n                          <Topic \n                            title={topic.data.title} \n                            description={topic.data.description} \n                          />\n                        </Link>    \n                      </Col>\n                    )\n                  })}\n                </Row>\n              </Col>\n            </Row>\n        </Container>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TopicsPage)\n","import React, { Component } from 'react'\nimport Topic from '../components/Topic';\nimport { Form, Field } from 'react-final-form';\nimport { connect } from 'react-redux'\nimport { getTopicAnswers, saveTopicAnswer, getTopic } from '../db/db';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Answers from '../components/Answers';\nimport AnswerField from '../components/AnswerField';\n\nimport '../styles/pages/TopicPage.css';\n\nconst mapStateToProps = state => ({\n  currentUser: state.user.currentUser\n})\nconst mapDispatchToProps = dispatch => ({})\n\nclass TopicPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      submitting: false,\n      submitAnswerText: \"Submit Answer\"\n    };\n    this.id = this.props.match.params.id;\n    getTopic(this.id).then(topic => {\n      this.setState({\n        topic: topic\n      });\n    });\n    getTopicAnswers(this.id).then(answers => {\n      var showUserAnswerEdit;\n      var showAnswerField;\n      var submitAnswerText = \"Submit Answer\";\n      console.log(\"user answer: \", userAnswer);\n      if(!this.props.currentUser) {\n        showUserAnswerEdit = false;\n        showAnswerField = false;\n      } else {\n        var userAnswer = this.userAlreadyHasAnswer(answers);\n        if (!userAnswer){\n          showUserAnswerEdit = false;\n          showAnswerField = true;\n        } else {\n          showUserAnswerEdit = true;\n          showAnswerField = false;\n          submitAnswerText = \"Update Answer\";\n        }\n      } \n      this.setState({\n        showUserAnswerEdit: showUserAnswerEdit,\n        showAnswerField: showAnswerField,\n        userAnswer: userAnswer,\n        submitAnswerText: submitAnswerText,\n        answers: answers\n      });\n    })\n  }\n\n  onSubmit(values) {\n    values.topicId = this.id;\n    this.setState({\n      submitting: true\n    });\n    saveTopicAnswer(values, this.props.currentUser)\n      .then(done => {\n        window.location.reload();\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  validate() {\n    return true;\n  }\n\n  userAlreadyHasAnswer(answers) {\n    var userAnswer;\n    console.log(\"answers: \", answers);\n    console.log(\"current user: \", this.props.currentUser);\n    answers.map(answer => {\n      if(answer.data.user.uid == this.props.currentUser.uid) {\n        userAnswer = answer;\n      }\n    });\n    return userAnswer;\n  }\n\n  changeToAnswerField() {\n    this.setState({\n      showUserAnswerEdit: false,\n      showAnswerField: true\n    })\n  }\n\n  render() {\n    if(!this.state.topic) {\n      return <div className=\"TopicPage\"></div>\n    } else {\n      return (\n        <div className=\"TopicPage\">\n          <Container>\n            <Row>\n              <Col md={10} sm={12}>\n                <div className=\"Topic\">\n                  <div className=\"TopicWrapper\">\n                    <h2 className=\"Title\">{this.state.topic.data.title}</h2>\n                    <p className=\"Description\">{this.state.topic.data.description}</p>\n\n                    {this.state.showAnswerField && \n                      <AnswerField \n                      answer={this.state.userAnswer}\n                      onSubmit={(values) => this.onSubmit(values)} \n                      validate={this.validate} \n                      submitting={this.state.submitting}\n                      submitText={this.state.submitAnswerText}/>\n                    }\n\n                    {this.state.showUserAnswerEdit &&\n                      <div className=\"UserAnswerEdit\">\n                        <span> Your answer: </span>\n                        <p>{this.state.userAnswer.data.body}</p>\n                        <button className=\"button-secondary\" type=\"submit\" onClick={() => this.changeToAnswerField()}>Edit Answer</button>\n                      </div>\n                    }\n                    {(this.state.showAnswerField || this.state.showUserAnswerEdit) && <hr/>}\n                    {this.state.answers && <Answers answers={this.state.answers}/>}\n                  </div>\n                </div>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      )\n    }\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TopicPage)\n","import React from 'react';\nimport logo from '../Okapi_logo.svg'; \nimport {\n    Link\n} from 'react-router-dom';\nimport { getUserId } from '../db/db';\nimport '../styles/components/Navbar.css';\n\nfunction Blank(props) {\n    return ( \n        <nav>\n            <Link to=\"/\"><img src={logo} alt=\"Okapi Logo\"></img></Link>\n        </nav>\n    )\n}\n\nfunction LoggedIn(props) {\n    return ( \n        <nav>\n            <Link to=\"/\"><img src={logo} alt=\"Okapi Logo\"></img></Link>\n            <div className=\"NavControls\">\n                {props.currentUser && \n                    <Link className=\"Username\">\n                        {props.currentUser.displayName}\n                    </Link>}\n                <button className=\"ButtonTertiary\" href=\"\" onClick={() => props.logout()}> Logout</button>\n            </div>\n        </nav>\n    )\n}\n\nfunction LoggedOut(props) {\n    return (\n        <nav>\n        <Link to=\"/\"><img src={logo} alt=\"Okapi Logo\"></img></Link>\n        <div className=\"NavControls\">\n            <Link className=\"ButtonTertiary\" to=\"/login\"><b>Login to contribute</b></Link> <br/>\n        </div>\n        </nav>\n    )\n}\n\nfunction Navbar(props) {\n    if(props.status === \"blank\") {\n        return Blank(props);\n    } else if(props.status === \"loggedIn\") {\n        return LoggedIn(props);\n    } else {\n        return LoggedOut(props);\n    }\n}\n\nexport default Navbar;","import React from 'react';\n\nfunction Head() {\n    return (\n        <head>\n            <link\n                rel=\"stylesheet\"\n                href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n                integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\n                crossorigin=\"anonymous\"\n            />\n        </head>\n    )\n}\n\nexport default Head;","import React from 'react';\nimport Head from './Head';\nimport {\n    HashRouter as Router,\n  } from 'react-router-dom';\n\n\nclass Layout extends React.Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <Router>\n                    {this.props.children}\n                </Router>\n            </div>   \n        )\n    }\n}\n\nexport default Layout;","import React, { Component } from 'react';\nimport firebase from 'firebase';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link\n} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setCurrentUser } from './redux/actions/actions.js';\n\nimport HomePage from './pages/HomePage';\nimport LoginPage from './pages/LoginPage';\nimport UserPage from './pages/UserPage';\nimport TopicsPage from './pages/TopicsPage';\nimport TopicPage from './pages/TopicPage';\nimport Navbar from './components/Navbar';\nimport Layout from './layouts/Layout';\n\nimport './App.css';\nimport { saveUser } from './db/db.js';\n\nvar SpotifyApi = require('spotify-web-api-node');\nvar Spotify = new SpotifyApi({\n  clientId: '57763b304f174d8b8b7d84236e776856',\n\n});\n\nconst mapReduxStateToProps = state => ({\n  currentUser: state.user.currentUser,\n  signedIn: state.user.signedIn\n});\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: (user) => dispatch(setCurrentUser(user)),\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if(user) {\n        saveUser(user).then(done => {\n          this.props.setCurrentUser(user);\n        })\n        .catch(error => {\n          console.log(error);\n        });\n      } else {\n        // user not signed in\n        this.props.setCurrentUser(null); //doing this sets sign in to false\n      }\n    });\n  }\n\n  logout() {\n    firebase.auth().signOut();\n  }\n\n  loadingScreen() {\n      return (\n          <Layout>\n            <Navbar status=\"blank\"></Navbar>\n            Loading...\n          </Layout>\n      )\n  }\n\n  notSignedInScreen() {\n    return (\n        <Layout>\n          <Navbar status=\"loggedOut\"></Navbar>\n          <LoginPage />\n        </Layout>\n    )\n  }\n\n  mainScreen() {\n    return (\n      <Layout>\n          {this.props.currentUser ? \n            <Navbar logout={() => this.logout()} status=\"loggedIn\" currentUser={this.props.currentUser}></Navbar>\n          :  \n            <Navbar logout={() => this.logout()} status=\"loggedOut\"></Navbar>\n          }\n\n\n      </Layout>\n    );\n  }\n\n  render() {\n    if(this.props.signedIn === undefined) {\n      return this.loadingScreen();\n    } else if(!this.props.signedIn) {\n      //return this.notSignedInScreen();\n      return this.mainScreen();\n    } else {\n      return this.mainScreen();\n    }\n  }\n}\n\n/*\n  This little work around is to allow the redux store to be passed to the\n  'App' component.\n  See: https://github.com/reactjs/react-redux/issues/390#issuecomment-221389608\n*/\nexport default connect(\n  mapReduxStateToProps,\n  mapDispatchToProps\n)(App);\n","export const setCurrentUser = currentUser => ({\n  type: 'SET_CURRENT_USER',\n  currentUser: currentUser\n});\n\nexport const setDB = db => ({\n  type: 'SET_DB',\n  db: db\n});\n\nexport const getCurrentUser =  'GET_CURRENT_USER';\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore, combineReducers } from 'redux';\nimport {userReducer as user} from './reducers/user.js';\nimport {dbReducer as db} from './reducers/db.js';\n\nconst rootReducer = combineReducers({\n    user,\n    db\n})\nconst store = createStore(rootReducer);\n\nexport default store; ","const userReducer = (state = {}, action) => {\n  switch(action.type) {\n    case 'SET_CURRENT_USER':\n      var newState = {...state}\n      newState.currentUser = action.currentUser\n      if(action.currentUser) {\n        newState.signedIn = true;\n      } else {\n        newState.signedIn = false;\n      }\n      return newState\n    default:\n      return state\n  }\n}\n\nexport {userReducer};\n","const dbReducer = (state = {}, action) => {\n    switch(action.type) {\n        case 'SET_DB':\n            var newState = {...state};\n            newState.db = action.db;\n            return newState;\n        default:\n            return state;\n    }\n}\n\nexport {dbReducer};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import registerServiceWorker from './registerServiceWorker';\nimport { unregister } from './registerServiceWorker';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(<Provider store={store}> <App/> </Provider>, document.getElementById('root'));\nunregister();","module.exports = __webpack_public_path__ + \"static/media/Okapi_logo.2b3b4cf0.svg\";"],"sourceRoot":""}